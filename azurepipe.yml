trigger:
  branches:
    include:
    - main

variables:
  workingDirectory: '$(System.DefaultWorkingDirectory)/'

stages:
- stage: default
  jobs:
  - job: Job
    pool:
      vmImage: ubuntu-latest
    strategy:
      matrix:
        Python37:
          python.version: '3.x'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
      displayName: 'Use Python $(python.version)'

    - bash: |
        if [ -f extensions.csproj ]
        then
            dotnet build extensions.csproj --runtime ubuntu.16.04-x64 --output ./bin
        fi
      workingDirectory: $(workingDirectory)
      displayName: 'Build extensions'
        
    - bash: |
        pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
      workingDirectory: $(workingDirectory)
      displayName: 'Install application dependencies'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(workingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

    # - task: CmdLine@2
    #   displayName: 'Install dependencies'
    #   inputs:
    #     script: |
    #       python -m pip install --upgrade pip
    #       pip install -r requirements.txt
    # - task: ArchiveFiles@2
    #   inputs:
    #     rootFolderOrFile: '$(Build.BinariesDirectory)'
    #     includeRootFolder: true
    #     archiveType: 'zip'
    #     archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    #     replaceExistingArchive: true
    # - task: PublishBuildArtifacts@1
    #   inputs:
    #     PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    #     ArtifactName: 'drop'
    #     publishLocation: 'Container'

